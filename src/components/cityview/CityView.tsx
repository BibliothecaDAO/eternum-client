/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/city_view_8.glb --transform --shadows --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    archer_tower: THREE.Mesh
    mage_tower: THREE.Mesh
    castle: THREE.Mesh
    mine: THREE.Mesh
    storehouse: THREE.Mesh
    storage: THREE.Mesh
    houses: THREE.Mesh
    city_foundation: THREE.Mesh
    fields: THREE.Mesh
    roads: THREE.Mesh
    harbors: THREE.Mesh
    terrain: THREE.Mesh
    lake: THREE.Mesh
    ocean: THREE.Mesh
    river: THREE.Mesh
    trees: THREE.Mesh
    cliffs: THREE.Mesh
    Cube001: THREE.Mesh
  }
  materials: {
    ['Bright Stone']: THREE.MeshStandardMaterial
    Mine: THREE.MeshStandardMaterial
    Wood: THREE.MeshStandardMaterial
    Rooftops: THREE.MeshStandardMaterial
    City: THREE.MeshStandardMaterial
    Crops: THREE.MeshStandardMaterial
    Road: THREE.MeshStandardMaterial
    Terrain: THREE.MeshStandardMaterial
    Lake: THREE.MeshStandardMaterial
    Ocean: THREE.MeshPhysicalMaterial
    River: THREE.MeshStandardMaterial
    Trees: THREE.MeshStandardMaterial
    Rocks: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/city_view_8-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.archer_tower.geometry} material={materials['Bright Stone']} position={[4.329, 0.391, 2.362]} rotation={[0, -1.476, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.mage_tower.geometry} material={materials['Bright Stone']} />
      <mesh castShadow receiveShadow geometry={nodes.castle.geometry} material={materials['Bright Stone']} />
      <mesh castShadow receiveShadow geometry={nodes.mine.geometry} material={materials.Mine} position={[0, -0.566, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.storehouse.geometry} material={materials['Bright Stone']} position={[6.345, 0.135, -3.609]} rotation={[0, -0.998, 0]} scale={0.045} />
      <mesh castShadow receiveShadow geometry={nodes.storage.geometry} material={materials.Wood} position={[-2.227, 0.461, 3.66]} />
      <mesh castShadow receiveShadow geometry={nodes.houses.geometry} material={materials.Rooftops} position={[0, 0.452, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.city_foundation.geometry} material={materials.City} />
      <mesh castShadow receiveShadow geometry={nodes.fields.geometry} material={materials.Crops} position={[0, 1.22, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.roads.geometry} material={materials.Road} position={[1.805, 0.067, 2.063]} />
      <mesh castShadow receiveShadow geometry={nodes.harbors.geometry} material={materials.Wood} position={[1.805, 0.067, 2.063]} />
      <mesh castShadow receiveShadow geometry={nodes.terrain.geometry} material={materials.Terrain} />
      <mesh castShadow receiveShadow geometry={nodes.lake.geometry} material={materials.Lake} />
      <mesh castShadow receiveShadow geometry={nodes.ocean.geometry} material={materials.Ocean} />
      <mesh castShadow receiveShadow geometry={nodes.river.geometry} material={materials.River} />
      <mesh castShadow receiveShadow geometry={nodes.trees.geometry} material={materials.Trees} />
      <mesh castShadow receiveShadow geometry={nodes.cliffs.geometry} material={materials.Rocks} position={[3.88, 0.461, -4.232]} />
    </group>
  )
}

useGLTF.preload('/models/city_view_8-transformed.glb')
