/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/worldmap_high.glb --transform
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useControls } from 'leva';
export function Model(props) {
  const { nodes, materials } = useGLTF('/models/world_map_8-transformed.glb')
  const { worldmapPosition, worldmapScale } = useControls({
    worldmapPosition:
    {
        value: { x: 0, z: 0, y: 0 },
        step: 0.01
    },
    worldmapScale:
    {
        value: 161.05,
        step: 0.05
    }
})
  return (
    <group {...props} dispose={null} scale={[worldmapScale, worldmapScale, worldmapScale]} position={[worldmapPosition.x, worldmapPosition.y, worldmapPosition.z]}>
      <mesh geometry={nodes.ocean.geometry} material={materials.Ocean} scale={[1, 1, 0.5]} />
      <mesh geometry={nodes.ocean001.geometry} material={materials.Ocean} scale={[0.68, 1, 0.5]} />
      <group position={[0, 0.21, 0]} scale={[0.85, 1, 0.5]}>
        <mesh geometry={nodes.Plane001.geometry} material={materials.Stone} />
        <mesh geometry={nodes.Plane001_1.geometry} material={materials.Gold} />
      </group>
      <mesh geometry={nodes.realms_worldTextures_topography_3002.geometry} material={materials.realms_worldTextures_topography_3} />
      <group position={[-0.05, 0.01, -0.09]} rotation={[Math.PI, -0.6, Math.PI]} scale={0.21}>
        <mesh geometry={nodes.Cylinder.geometry} material={materials.flag} />
        <mesh geometry={nodes.Cylinder_1.geometry} material={materials.wood} />
      </group>
      <mesh geometry={nodes.deciduous_tree.geometry} material={materials.Deciduous_Trees} scale={0.97} />
      <mesh geometry={nodes.evergreen_tree.geometry} material={materials.Evergreen_Trees} scale={0.97} />
      <mesh geometry={nodes.Plane013.geometry} material={materials.Evergreen_Trees} />
      <mesh geometry={nodes.Plane013_1.geometry} material={materials.Evergreen_Trees} />
    </group>
  )
}

useGLTF.preload('/models/world_map_8-transformed.glb')
